using System;
using System.Collections.Generic;

//В 25 веке по земному летоисчислению всеми любимые собаки породы чау-чау
//стали вымирать из-за распространения генетического заболевания,
//которое не поддавалось лечению. Планетарное правительство приняло тяжелое решение:
//запретить скрещивать тех собак, которые имеют похожий геном, чтобы остановить вымирание породы.

//Геном собаки содержит 26 видов оснований, для обозначения которых будем использовать
//буквы латинского алфавита от A до Z. Сам геном записывается строкой из латинских букв.
//Важную роль в геноме играют пары соседних оснований, например, в геноме ≪ABBACAB≫
//можно выделить следующие пары оснований: AB, BB, BA, AC, CA, AB.Степенью близости одного
//генома другому геному называется количество пар соседних оснований первого генома,
//которые встречаются во втором геноме.

//Ваша задача написать программу, которая по данным двум геномам,
//определит степень близости первого генома второму геному.

//Формат ввода
//Программа получает на вход две строки, состоящие из заглавных латинских букв.
//Каждая строка непустая, и её длина не превосходит 105.

//Формат вывода
//Программа должна вывести одно целое число – степень близости генома,
//записанного в первой строке, геному, записанному во второй строке.

//Пример
//Ввод	
//ABBACAB
//BCABB

//Вывод
//4

//Примечания
//Следующие пары оснований первого генома встречаются во втором геноме: AB, BB, CA, AB.
//Обратите внимание на то, что пара AB в первом геноме встречается два раза,
//поэтому и подсчитана в ответе два раза.

namespace contest2ndCourse
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string alpha = Console.ReadLine();
            string beta = Console.ReadLine();
            HashSet<string> set = new HashSet<string>();
            List<string> list = new List<string>();
            for (int i = 0; i < alpha.Length - 1; i++)
                list.Add(alpha.Substring(i, 2));
            for (int i = 0; i < beta.Length - 1; i++)
                set.Add(beta.Substring(i, 2));
            int cnt = 0;
            for (int i = 0; i < alpha.Length - 1; i++)
                if (set.Contains(alpha.Substring(i, 2))) cnt++;
            Console.WriteLine(cnt);
            Console.ReadLine();
        }
    }
}
